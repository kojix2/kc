name: release

on:
  push:
    tags:
      - "v*"

jobs:
  build_release:
    name: Build Release ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu, macos]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: latest

      - name: Run Linux Build
        if: matrix.os == 'ubuntu'
        run: |
          mkdir -p bin
          chmod 755 bin
          docker run -d --name alpine -v $(pwd):/workspace -w /workspace crystallang/crystal:latest-alpine tail -f /dev/null
          docker exec alpine apk add build-base readline-dev readline-static ncurses-dev ncurses-static ncurses-libs
          docker exec alpine shards install --without-development --release
          docker exec alpine make clean
          docker exec alpine make static
          docker exec alpine chmod +x kc
          docker exec alpine cp kc bin/kc
          docker exec alpine gzip bin/kc
          docker exec alpine mv bin/kc.gz bin/kc-linux.gz

      - name: Run Mac Build x64
        if: matrix.os == 'macos'
        run: |
          mkdir -p bin
          shards install --without-development --release
          make
          otool -L kc
          chmod +x kc
          cp kc bin/kc
          gzip bin/kc
          mv bin/kc.gz bin/kc-macos.gz

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/kc-linux.gz
            bin/kc-macos.gz
            LICENSE
